# This is a basic workflow to help you get started with Actions

name: junit5 Maven CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_and_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with: 
          java-version: 14
          
      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1    
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      # Runs a set of commands using the runners shell
      - name: Build project with Maven
        run: mvn -B package --file pom.xml
      #    
  publish-job:
      runs-on: ubuntu-latest
      needs: [build_and_test]
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-java@v1
          with:
            java-version: 14
        - run: mvn -B package --file pom.xml -DskipTests
        - run: mkdir staging && cp -r target/* staging
        - uses: actions/upload-artifact@v1
          with:
            name: Package
            path: staging
        - name: Build project with Maven
          run: java -jar staging/junit5-jupiter-starter-maven-1.0.jar
  
  build-docker-image:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: [build_and_test]
    
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}  

   # steps:
   #   - name: Check Out Repo
   #     uses: actions/checkout@v2
   #   - name: Login to Docker Hub
   #     run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
   #            
   #   - name: Build Container image
   #     run: docker build --tag ${{ secrets.DOCKER_REPO }}:latest .
        
  #    - name: Publish Docker image
  #      run: docker push ${{ secrets.DOCKER_REPO }}:latest
        
     
